// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
//Remove the relationMode="prisma" from the structure since mongodb doesn't support it
//  provider = "postgresql" it has been removed as well
//Once you ads a model File reference as an array on the model User, the following line would be added to the Model File: 
// User User? @relation(fields: [userId], references: [id])
// userId String?
//UploadStatus is an enum Variable; 

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @map("_id") 
  email String @unique

  file    File[]
  message Message[]

  stripeCustomerId       String?   @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?   @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?   @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")
}

enum UploadStatus {
  PENDING
  PROCESSING
  FAILED
  SUCCESS
}

model File {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String

  uploadStatus UploadStatus? @default(PENDING)

  message Message[]

  url String
  key String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model Message {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  text String @db.String()

  isUserMessage Boolean
  createdAt     DateTime @default(now())
  User          User?    @relation(fields: [userId], references: [id])
  userId        String?  @db.ObjectId
  File          File?    @relation(fields: [fileId], references: [id])
  fileId        String?  @db.ObjectId
}
